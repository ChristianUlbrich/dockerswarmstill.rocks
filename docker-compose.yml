version: '3.3'

services:
  builder:
    image: ghcr.io/christianulbrich/dockerswarmstillrocks-builder:latest
    build:
      dockerfile: builder.Dockerfile
      context: .
      platforms:
        - 'linux/arm64'
    # small hack to prevent it from deploying
    deploy:
      replicas: 0
    volumes:
      - ./docs:/opt/build/docs
      - ./site:/opt/build/site

  service:
    image: ghcr.io/christianulbrich/dockerswarmstillrocks-website:${VERSION:-latest}
    depends_on:
      - builder
    build:
      dockerfile: service.Dockerfile
      context: .
      platforms:
        - 'linux/arm64'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # http redirect on dockerswarmstill.rocks + www.dockerswarmstill.rocks
        - "traefik.http.routers.website-http.rule=Host(`dockerswarmstill.rocks`) || Host(`www.dockerswarmstill.rocks`)"
        - "traefik.http.routers.website-http.entrypoints=http"
        - "traefik.http.routers.website-http.middlewares=https-redirect@file"
        # https entrypoint on dockerswarmstill.rocks + www.dockerswarmstill.rocks
        - "traefik.http.routers.website-https.rule=Host(`dockerswarmstill.rocks`) || Host(`www.dockerswarmstill.rocks`)"
        - "traefik.http.routers.website-https.entrypoints=https"
        - "traefik.http.routers.website-https.tls=true"
        # explicitly use le as certresolver
        - "traefik.http.routers.website-https.tls.certresolver=letsencrypt"
        - "traefik.http.routers.website-https.service=websiteHttpsService"
        - "traefik.http.services.websiteHttpsService.loadbalancer.server.port=80"
    networks:
      - traefik-public

networks:
  traefik-public:
    external: true

