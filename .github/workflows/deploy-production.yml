name: Deploy Production

on:
  push:
    branches:
      - master
    tags:
      - '*'


jobs:
  check-branch:
    runs-on: ubuntu-latest
    outputs:
      on-master: ${{ steps.check.outputs.on-master }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch all branches
        run: git fetch --all
      - name: Check if tag is on master
        id: check
        run: |
          # Get the commit that the tag points to
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})

          # Check if this commit is part of the master branch
          if git merge-base --is-ancestor $TAG_COMMIT origin/master; then
            echo "on-master=true" >> $GITHUB_OUTPUT
          else
            echo "on-master=false" >> $GITHUB_OUTPUT
          fi

  get-latest-tag:
    runs-on: ubuntu-latest
    needs: check-branch
    if: needs.check-branch.outputs.on-master == 'true'
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: get-tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
  

  call-build-images:
    needs: get-latest-tag
    uses: ./.github/workflows/build-images.yml
    with:
      version: ${{ needs.get-latest-tag.outputs.tag }}

  call-deploy-stack:
    needs: call-build-images
    uses: ./.github/workflows/deploy-stack.yml
    with:
      version: ${{ needs.get-latest-tag.outputs.tag }}
      stage: Production
      deployUrl: https://dockerswarmstill.rocks
      stack: website-production
    secrets:
      DOCKER_SWARM_MANAGER_SSH_KEY: ${{ secrets.DOCKER_SWARM_MANAGER_SSH_KEY }}
      DOCKER_SWARM_MANAGER_HOST: ${{ secrets.DOCKER_SWARM_MANAGER_HOST }}
